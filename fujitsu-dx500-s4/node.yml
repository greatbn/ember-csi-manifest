apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-node-sa
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-node-cr
rules:
  # Allow managing ember resources
  - apiGroups: ['ember-csi.io']
    resources: ['*']
    verbs: ['*']
  # Allow listing and creating CRDs
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['list', 'create']
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-node-rb
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: csi-node-cr
subjects:
- kind: ServiceAccount
  name: csi-node-sa
  namespace: default
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-node
  namespace: default
spec:
  selector:
    matchLabels:
      app: csi-node
  template:
    metadata:
      labels:
        app: csi-node
    spec:
      serviceAccount: csi-node-sa
      # Required by iSCSI
      hostNetwork: true
      # Required by multipath detach
      hostIPC: true
      containers:
        - name: driver-registrar
          #image: quay.io/k8scsi/driver-registrar:v0.3.0
          image: cr-hn-1.vccloud.vn/17a1c3c952c84b3e84a82ddd48364938/csi-node-driver-registrar
          args:
          - --v=5
          - --csi-address=/csi-data/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/ember-csi.io/csi.sock
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/io.ember-csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          volumeMounts:
          - mountPath: /csi-data
            name: socket-dir
          - name: registration-dir
            mountPath: /registration
        - name: csi-driver
          image: embercsi/ember-csi:master
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          env:
            - name: PYTHONUNBUFFERED
              value: '0'
            - name: X_CSI_SPEC_VERSION
              # value: v0.2
              value: v1.1
            - name: CSI_ENDPOINT
              value: unix:///csi-data/csi.sock
            - name: CSI_MODE
              value: node
            - name: X_CSI_PERSISTENCE_CONFIG
              value: '{"storage":"crd"}'
            - name: X_CSI_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: X_CSI_EMBER_CONFIG
              value: '{"name":"fujitsu-dx","multipath":true,"driver":"FJDXFC","protocol":"fc","ip":"172.20.11.9","user":"root","password":"root","poolname":"pool1","snappoolname":"","request_multipath":true}'

          volumeMounts:
            - name: socket-dir
              mountPath: /csi-data
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: dev-dir
              mountPath: /dev
            - name: multipath-dir
              mountPath: /etc/multipath
            - name: multipath-conf
              mountPath: /etc/multipath.conf
            - name: modules-dir
              mountPath: /lib/modules

            - name: localtime
              mountPath: /etc/localtime
            - name: udev-data
              mountPath: /run/udev
            - name: registration-dir
              mountPath: /registration
            # Required to preserve the node targets between restarts
            # In a real deployment we should be mounting container's
            # /var/lib-ember-csi on the host
        # - name: csc
        #   image: akrog/csc:v0.2.0
        #   command: ["tail"]
        #   args: ["-f", "/dev/null"]
        #   env:
        #     - name: CSI_ENDPOINT
        #       value: unix:///csi-data/csi.sock
        #   volumeMounts:
        #     - name: socket-dir
        #       mountPath: /csi-data
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/ember-csi.io
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: dev-dir
          hostPath:
            path: /dev
        - name: multipath-dir
          hostPath:
            path: /etc/multipath
        - name: multipath-conf
          hostPath:
            path: /etc/multipath.conf
        - name: modules-dir
          hostPath:
            path: /lib/modules
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: udev-data
          hostPath:
            path: /run/udev
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
